function heroesOfCodeAndLogic(input) {
    let numberOfHeroes = Number(input.shift());
    let heroes = {};

        for (let i = 0; i < numberOfHeroes; i++) {
            let [name, hp, mp] = input.shift().split(' ');
            hp = Number(hp);
            mp = Number(mp);
            heroes[name] = {
                hp,
                mp,
                alive: true
            }
        }


        while (input[0] != 'End') {
            let [command, heroName, p1, p2] = input.shift().split(' - ');
            p1 = Number(p1);
            let hero = heroes[heroName];

                if (command == 'CastSpell') {
                    let manaNeeded = p1;
                    let spell = p2;
                    if (hero.mp >= manaNeeded) {
                        hero.mp -= manaNeeded;
                        console.log(`${heroName} has successfully cast ${spell} and now has ${hero.mp} MP!`);                     
                    } else {
                        console.log(`${heroName} does not have enough MP to cast ${spell}!`);
                    }
                } else if (command == 'TakeDamage') {
                    let damage = p1;
                    let attacker = p2;
                    if (hero.hp - damage > 0) {
                        hero.hp -= damage;
                        console.log(`${heroName} was hit for ${damage} HP by ${attacker} and now has ${hero.hp} HP left!`);
                    } else {
                        console.log(`${heroName} has been killed by ${attacker}!`);
                        hero.alive = false;
                    }
                } else if (command == 'Recharge') {
                    let mpRestored = p1;
                    let actualRestored = mpRestored;
                        if (hero.mp + mpRestored > 200) {
                            actualRestored = mpRestored - ((hero.mp + mpRestored) - 200 );
                             hero.mp = 200;
                        } else {                        
                             hero.mp += actualRestored;
                        }

                    console.log(`${heroName} recharged for ${actualRestored} MP!`)
                    
                } else if (command == 'Heal') {
                    let hpRestored = p1;
                    let actualRestored = hpRestored;
                        if (hero.hp + hpRestored > 100) {
                             actualRestored = hpRestored - ((hero.hp + hpRestored) - 100 );
                             hero.hp = 100;
                        } else {                        
                             hero.hp += actualRestored;
                        }
                    console.log(`${heroName} healed for ${actualRestored} HP!`)
                    
                }
        
        }
        let heroesArray = Object.entries(heroes);

        for (let element of heroesArray) {
            let name = element[0];
            let hero = element[1]
            let hp = hero.hp;
            let mp = hero.mp;
            let alive = hero.alive;
            if (alive == true) {
                console.log(`${name}`)
                console.log(`  HP: ${hp}`)
                console.log(`  MP: ${mp}`)
            }
        }

}
heroesOfCodeAndLogic(['2', 'Solmyr 85 120', 'Kyrre 99 50', 'Heal - Solmyr - 10', 'Recharge - Solmyr - 50', 'TakeDamage - Kyrre - 66 - Orc', 'CastSpell - Kyrre - 15 - ViewEarth', 'End']);
console.log(`\n ----- \n`)
heroesOfCodeAndLogic(['4', 'Adela 90 150', 'SirMullich 70 40', 'Ivor 1 111', 'Tyris 94 61', 'Heal - SirMullich - 50', 'Recharge - Adela - 100', 'CastSpell - Tyris - 1000 - Fireball', 'TakeDamage - Tyris - 99 - Fireball', 'TakeDamage - Ivor - 3 - Mosquito', 'End']);
