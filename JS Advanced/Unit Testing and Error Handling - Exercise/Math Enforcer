const {mathEnforcer} = require('./mathEnforcer');
const {expect} = require('chai');

describe('Tests for Math Enforcer', () => {
    describe('Tests for the addFive function', () => {
        it('works as intended', () => {
            expect(mathEnforcer.addFive(5)).to.equal(10);
        })
        it('does not parse strings to numbers', () => {
            expect(mathEnforcer.addFive('5')).to.be.undefined;
        })
        it('works with negative numbers', () => {
            expect(mathEnforcer.addFive(-7)).to.equal(-2);
        })
        it('works with floating point numbers', () => {
            expect(mathEnforcer.addFive(1.7)).to.be.closeTo(6.7, 0.1);
        })
    });
    describe('Tests for the subtractTen function', () => {
        it('works as intended', () => {
            expect(mathEnforcer.subtractTen(15)).to.equal(5);
        })
        it('does not parse strings to numbers', () => {
            expect(mathEnforcer.subtractTen('15')).to.be.undefined;
        })
        it('works with negative numbers', () => {
            expect(mathEnforcer.subtractTen(-7)).to.equal(-17);
        })
        it('works with floating point numbers', () => {
            expect(mathEnforcer.subtractTen(11.7)).to.be.closeTo(1.7, 0.1);
        })
    });
    describe('Tests for the sum function', () => {
        it('works as intended', () => {
            expect(mathEnforcer.sum(5, 10)).to.equal(15);
        });
        it('works with negative integer', () => {
            expect(mathEnforcer.sum(-5, 10)).to.equal(5);
            expect(mathEnforcer.sum(-5, -10)).to.equal(-15);
        });
        it('does not work with incorrect params', () => {
            expect(mathEnforcer.sum('five', 10)).to.be.undefined;
            expect(mathEnforcer.sum(5, 'ten')).to.be.undefined;
        });
        it('works with floating point numbers', () => {
            expect(mathEnforcer.sum(0.5, 2.6)).to.be.closeTo(3.1, 0.1);
        });
        it('doesnt work with one param missing', () => {
            expect(mathEnforcer.sum(0.5)).to.be.undefined;
        });
    });
});


Template:

let mathEnforcer = {
    addFive: function (num) {
        if (typeof(num) !== 'number') {
            return undefined;
        }
        return num + 5;
    },
    subtractTen: function (num) {
        if (typeof(num) !== 'number') {
            return undefined;
        }
        return num - 10;
    },
    sum: function (num1, num2) {
        if (typeof(num1) !== 'number' || typeof(num2) !== 'number') {
            return undefined;
        }
        return num1 + num2;
    }
};

module.exports = { mathEnforcer }
